<<<<<<< HEAD
language: python
python:
  - "2.7"
  - "3.3"
  - "3.4"
before_install:
    - sudo apt-get update -qq
    - sudo apt-get build-dep -qq python-pygame
    - sudo apt-get install -qq python-pygame
    - sudo apt-get install python python-pygame python-pip python-imaging python-six python-netifaces git
    - sudo pip install pytmx
    - sudo pip install neteria
cache: pip
install:
  - pip install -r requirements.txt
script:
  - python tuxemon.py
=======
# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V               # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate

test:
  script:
  - python setup.py test
  - pip install tox flake8  # you can also use tox
  - tox -e py36,flake8

run:
  script:
  - python setup.py bdist_wheel
  # an alternative approach is to install and run:
  - pip install dist/*
  # run the command here
  artifacts:
    paths:
    - dist/*.whl

pages:
  script:
  - pip install sphinx sphinx-rtd-theme
  - cd doc ; make html
  - mv build/html/ ../public/
  artifacts:
    paths:
    - public
  only:
  - master
>>>>>>> 0b64f44d20ece124f6188a3a2cc89d970ff909bb
